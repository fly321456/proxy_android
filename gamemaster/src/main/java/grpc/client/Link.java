// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: link.proto

package grpc.client;

@SuppressWarnings("unused")
public final class Link {
  private Link() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code grpc.client.Protocal}
   */
  public enum Protocal
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_PROTOCAL = 0;</code>
     */
    UNKNOWN_PROTOCAL(0, 0),
    /**
     * <code>TCP = 1;</code>
     */
    TCP(1, 1),
    /**
     * <code>UDP = 2;</code>
     */
    UDP(2, 2),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>UNKNOWN_PROTOCAL = 0;</code>
     */
    public static final int UNKNOWN_PROTOCAL_VALUE = 0;
    /**
     * <code>TCP = 1;</code>
     */
    public static final int TCP_VALUE = 1;
    /**
     * <code>UDP = 2;</code>
     */
    public static final int UDP_VALUE = 2;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static Protocal valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN_PROTOCAL;
        case 1: return TCP;
        case 2: return UDP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Protocal>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Protocal> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Protocal>() {
            public Protocal findValueByNumber(int number) {
              return Protocal.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return grpc.client.Link.getDescriptor().getEnumTypes().get(0);
    }

    private static final Protocal[] VALUES = values();

    public static Protocal valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Protocal(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:grpc.client.Protocal)
  }

  /**
   * Protobuf enum {@code grpc.client.AccelStat}
   */
  public enum AccelStat
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_ACCEL_STATE = 0;</code>
     */
    UNKNOWN_ACCEL_STATE(0, 0),
    /**
     * <code>NORMAL = 1;</code>
     *
     * <pre>
     *正常
     * </pre>
     */
    NORMAL(1, 1),
    /**
     * <code>NOT_PROXY = 2;</code>
     *
     * <pre>
     *无需代理，如80/443黑名单
     * </pre>
     */
    NOT_PROXY(2, 2),
    /**
     * <code>DIRECT_FAIL = 3;</code>
     *
     * <pre>
     *直连失败
     * </pre>
     */
    DIRECT_FAIL(3, 3),
    /**
     * <code>DIRECT_TIMEOUT = 4;</code>
     *
     * <pre>
     *直连超时
     * </pre>
     */
    DIRECT_TIMEOUT(4, 4),
    /**
     * <code>TCP_SYN_FAIL = 5;</code>
     *
     * <pre>
     *接入节点TCP建链失败
     * </pre>
     */
    TCP_SYN_FAIL(5, 5),
    /**
     * <code>PROXY_FAIL = 6;</code>
     *
     * <pre>
     *代理失败，proxy响应错误
     * </pre>
     */
    PROXY_FAIL(6, 6),
    /**
     * <code>PROXY_TIMEOUT = 7;</code>
     *
     * <pre>
     *代理超时
     * </pre>
     */
    PROXY_TIMEOUT(7, 7),
    /**
     * <code>BOTH_FAIL = 8;</code>
     *
     * <pre>
     *直连和代理都失败
     * </pre>
     */
    BOTH_FAIL(8, 8),
    /**
     * <code>NETWORK_ERROR = 9;</code>
     *
     * <pre>
     *网络错误，如：无网络或2G
     * </pre>
     */
    NETWORK_ERROR(9, 9),
    /**
     * <code>UDP_ECHO_FAIL = 10;</code>
     *
     * <pre>
     *UDP测速失败或者UDP无响应
     * </pre>
     */
    UDP_ECHO_FAIL(10, 10),
    /**
     * <code>SPEED_MEASURE_FAIL = 11;</code>
     *
     * <pre>
     *两段测速失败
     * </pre>
     */
    SPEED_MEASURE_FAIL(11, 11),
    /**
     * <code>SPEED_MEASUREING = 12;</code>
     *
     * <pre>
     *两段测速未完成
     * </pre>
     */
    SPEED_MEASUREING(12, 12),
    /**
     * <code>MISS_IP = 13;</code>
     *
     * <pre>
     *两段测速IP未命中
     * </pre>
     */
    MISS_IP(13, 13),
    /**
     * <code>INVALID_DELAY = 14;</code>
     *
     * <pre>
     *两段测速的延迟为异常值（0 or -1）
     * </pre>
     */
    INVALID_DELAY(14, 14),
    /**
     * <code>STAT_INVALID = 128;</code>
     *
     * <pre>
     *Ceiling
     * </pre>
     */
    STAT_INVALID(15, 128),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>UNKNOWN_ACCEL_STATE = 0;</code>
     */
    public static final int UNKNOWN_ACCEL_STATE_VALUE = 0;
    /**
     * <code>NORMAL = 1;</code>
     *
     * <pre>
     *正常
     * </pre>
     */
    public static final int NORMAL_VALUE = 1;
    /**
     * <code>NOT_PROXY = 2;</code>
     *
     * <pre>
     *无需代理，如80/443黑名单
     * </pre>
     */
    public static final int NOT_PROXY_VALUE = 2;
    /**
     * <code>DIRECT_FAIL = 3;</code>
     *
     * <pre>
     *直连失败
     * </pre>
     */
    public static final int DIRECT_FAIL_VALUE = 3;
    /**
     * <code>DIRECT_TIMEOUT = 4;</code>
     *
     * <pre>
     *直连超时
     * </pre>
     */
    public static final int DIRECT_TIMEOUT_VALUE = 4;
    /**
     * <code>TCP_SYN_FAIL = 5;</code>
     *
     * <pre>
     *接入节点TCP建链失败
     * </pre>
     */
    public static final int TCP_SYN_FAIL_VALUE = 5;
    /**
     * <code>PROXY_FAIL = 6;</code>
     *
     * <pre>
     *代理失败，proxy响应错误
     * </pre>
     */
    public static final int PROXY_FAIL_VALUE = 6;
    /**
     * <code>PROXY_TIMEOUT = 7;</code>
     *
     * <pre>
     *代理超时
     * </pre>
     */
    public static final int PROXY_TIMEOUT_VALUE = 7;
    /**
     * <code>BOTH_FAIL = 8;</code>
     *
     * <pre>
     *直连和代理都失败
     * </pre>
     */
    public static final int BOTH_FAIL_VALUE = 8;
    /**
     * <code>NETWORK_ERROR = 9;</code>
     *
     * <pre>
     *网络错误，如：无网络或2G
     * </pre>
     */
    public static final int NETWORK_ERROR_VALUE = 9;
    /**
     * <code>UDP_ECHO_FAIL = 10;</code>
     *
     * <pre>
     *UDP测速失败或者UDP无响应
     * </pre>
     */
    public static final int UDP_ECHO_FAIL_VALUE = 10;
    /**
     * <code>SPEED_MEASURE_FAIL = 11;</code>
     *
     * <pre>
     *两段测速失败
     * </pre>
     */
    public static final int SPEED_MEASURE_FAIL_VALUE = 11;
    /**
     * <code>SPEED_MEASUREING = 12;</code>
     *
     * <pre>
     *两段测速未完成
     * </pre>
     */
    public static final int SPEED_MEASUREING_VALUE = 12;
    /**
     * <code>MISS_IP = 13;</code>
     *
     * <pre>
     *两段测速IP未命中
     * </pre>
     */
    public static final int MISS_IP_VALUE = 13;
    /**
     * <code>INVALID_DELAY = 14;</code>
     *
     * <pre>
     *两段测速的延迟为异常值（0 or -1）
     * </pre>
     */
    public static final int INVALID_DELAY_VALUE = 14;
    /**
     * <code>STAT_INVALID = 128;</code>
     *
     * <pre>
     *Ceiling
     * </pre>
     */
    public static final int STAT_INVALID_VALUE = 128;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static AccelStat valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN_ACCEL_STATE;
        case 1: return NORMAL;
        case 2: return NOT_PROXY;
        case 3: return DIRECT_FAIL;
        case 4: return DIRECT_TIMEOUT;
        case 5: return TCP_SYN_FAIL;
        case 6: return PROXY_FAIL;
        case 7: return PROXY_TIMEOUT;
        case 8: return BOTH_FAIL;
        case 9: return NETWORK_ERROR;
        case 10: return UDP_ECHO_FAIL;
        case 11: return SPEED_MEASURE_FAIL;
        case 12: return SPEED_MEASUREING;
        case 13: return MISS_IP;
        case 14: return INVALID_DELAY;
        case 128: return STAT_INVALID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccelStat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccelStat> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccelStat>() {
            public AccelStat findValueByNumber(int number) {
              return AccelStat.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return grpc.client.Link.getDescriptor().getEnumTypes().get(1);
    }

    private static final AccelStat[] VALUES = values();

    public static AccelStat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AccelStat(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:grpc.client.AccelStat)
  }

  public interface GamingLinksMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.client.GamingLinksMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    java.util.List<grpc.client.Link.GamingLinkMsg> 
        getLinksList();
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    grpc.client.Link.GamingLinkMsg getLinks(int index);
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    int getLinksCount();
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    java.util.List<? extends grpc.client.Link.GamingLinkMsgOrBuilder> 
        getLinksOrBuilderList();
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    grpc.client.Link.GamingLinkMsgOrBuilder getLinksOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code grpc.client.GamingLinksMsg}
   */
  public  static final class GamingLinksMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:grpc.client.GamingLinksMsg)
      GamingLinksMsgOrBuilder {
    // Use GamingLinksMsg.newBuilder() to construct.
    private GamingLinksMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GamingLinksMsg() {
      links_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GamingLinksMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                links_ = new java.util.ArrayList<grpc.client.Link.GamingLinkMsg>();
                mutable_bitField0_ |= 0x00000001;
              }
              links_.add(input.readMessage(grpc.client.Link.GamingLinkMsg.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          links_ = java.util.Collections.unmodifiableList(links_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinksMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinksMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              grpc.client.Link.GamingLinksMsg.class, grpc.client.Link.GamingLinksMsg.Builder.class);
    }

    public static final int LINKS_FIELD_NUMBER = 1;
    private java.util.List<grpc.client.Link.GamingLinkMsg> links_;
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    public java.util.List<grpc.client.Link.GamingLinkMsg> getLinksList() {
      return links_;
    }
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    public java.util.List<? extends grpc.client.Link.GamingLinkMsgOrBuilder> 
        getLinksOrBuilderList() {
      return links_;
    }
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    public int getLinksCount() {
      return links_.size();
    }
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    public grpc.client.Link.GamingLinkMsg getLinks(int index) {
      return links_.get(index);
    }
    /**
     * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
     */
    public grpc.client.Link.GamingLinkMsgOrBuilder getLinksOrBuilder(
        int index) {
      return links_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < links_.size(); i++) {
        output.writeMessage(1, links_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < links_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, links_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static grpc.client.Link.GamingLinksMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static grpc.client.Link.GamingLinksMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinksMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(grpc.client.Link.GamingLinksMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code grpc.client.GamingLinksMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.client.GamingLinksMsg)
        grpc.client.Link.GamingLinksMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinksMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinksMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                grpc.client.Link.GamingLinksMsg.class, grpc.client.Link.GamingLinksMsg.Builder.class);
      }

      // Construct using grpc.client.Link.GamingLinksMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLinksFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          linksBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinksMsg_descriptor;
      }

      public grpc.client.Link.GamingLinksMsg getDefaultInstanceForType() {
        return grpc.client.Link.GamingLinksMsg.getDefaultInstance();
      }

      public grpc.client.Link.GamingLinksMsg build() {
        grpc.client.Link.GamingLinksMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public grpc.client.Link.GamingLinksMsg buildPartial() {
        grpc.client.Link.GamingLinksMsg result = new grpc.client.Link.GamingLinksMsg(this);
        int from_bitField0_ = bitField0_;
        if (linksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            links_ = java.util.Collections.unmodifiableList(links_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.links_ = links_;
        } else {
          result.links_ = linksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof grpc.client.Link.GamingLinksMsg) {
          return mergeFrom((grpc.client.Link.GamingLinksMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(grpc.client.Link.GamingLinksMsg other) {
        if (other == grpc.client.Link.GamingLinksMsg.getDefaultInstance()) return this;
        if (linksBuilder_ == null) {
          if (!other.links_.isEmpty()) {
            if (links_.isEmpty()) {
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLinksIsMutable();
              links_.addAll(other.links_);
            }
            onChanged();
          }
        } else {
          if (!other.links_.isEmpty()) {
            if (linksBuilder_.isEmpty()) {
              linksBuilder_.dispose();
              linksBuilder_ = null;
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000001);
              linksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLinksFieldBuilder() : null;
            } else {
              linksBuilder_.addAllMessages(other.links_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        grpc.client.Link.GamingLinksMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (grpc.client.Link.GamingLinksMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<grpc.client.Link.GamingLinkMsg> links_ =
        java.util.Collections.emptyList();
      private void ensureLinksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          links_ = new java.util.ArrayList<grpc.client.Link.GamingLinkMsg>(links_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          grpc.client.Link.GamingLinkMsg, grpc.client.Link.GamingLinkMsg.Builder, grpc.client.Link.GamingLinkMsgOrBuilder> linksBuilder_;

      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public java.util.List<grpc.client.Link.GamingLinkMsg> getLinksList() {
        if (linksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(links_);
        } else {
          return linksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public int getLinksCount() {
        if (linksBuilder_ == null) {
          return links_.size();
        } else {
          return linksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public grpc.client.Link.GamingLinkMsg getLinks(int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);
        } else {
          return linksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder setLinks(
          int index, grpc.client.Link.GamingLinkMsg value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.set(index, value);
          onChanged();
        } else {
          linksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder setLinks(
          int index, grpc.client.Link.GamingLinkMsg.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.set(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder addLinks(grpc.client.Link.GamingLinkMsg value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(value);
          onChanged();
        } else {
          linksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder addLinks(
          int index, grpc.client.Link.GamingLinkMsg value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(index, value);
          onChanged();
        } else {
          linksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder addLinks(
          grpc.client.Link.GamingLinkMsg.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder addLinks(
          int index, grpc.client.Link.GamingLinkMsg.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder addAllLinks(
          java.lang.Iterable<? extends grpc.client.Link.GamingLinkMsg> values) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, links_);
          onChanged();
        } else {
          linksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder clearLinks() {
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          linksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public Builder removeLinks(int index) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.remove(index);
          onChanged();
        } else {
          linksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public grpc.client.Link.GamingLinkMsg.Builder getLinksBuilder(
          int index) {
        return getLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public grpc.client.Link.GamingLinkMsgOrBuilder getLinksOrBuilder(
          int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);  } else {
          return linksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public java.util.List<? extends grpc.client.Link.GamingLinkMsgOrBuilder> 
           getLinksOrBuilderList() {
        if (linksBuilder_ != null) {
          return linksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(links_);
        }
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public grpc.client.Link.GamingLinkMsg.Builder addLinksBuilder() {
        return getLinksFieldBuilder().addBuilder(
            grpc.client.Link.GamingLinkMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public grpc.client.Link.GamingLinkMsg.Builder addLinksBuilder(
          int index) {
        return getLinksFieldBuilder().addBuilder(
            index, grpc.client.Link.GamingLinkMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .grpc.client.GamingLinkMsg links = 1;</code>
       */
      public java.util.List<grpc.client.Link.GamingLinkMsg.Builder> 
           getLinksBuilderList() {
        return getLinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          grpc.client.Link.GamingLinkMsg, grpc.client.Link.GamingLinkMsg.Builder, grpc.client.Link.GamingLinkMsgOrBuilder> 
          getLinksFieldBuilder() {
        if (linksBuilder_ == null) {
          linksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              grpc.client.Link.GamingLinkMsg, grpc.client.Link.GamingLinkMsg.Builder, grpc.client.Link.GamingLinkMsgOrBuilder>(
                  links_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          links_ = null;
        }
        return linksBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:grpc.client.GamingLinksMsg)
    }

    // @@protoc_insertion_point(class_scope:grpc.client.GamingLinksMsg)
    private static final grpc.client.Link.GamingLinksMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new grpc.client.Link.GamingLinksMsg();
    }

    public static grpc.client.Link.GamingLinksMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GamingLinksMsg>
        PARSER = new com.google.protobuf.AbstractParser<GamingLinksMsg>() {
      public GamingLinksMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GamingLinksMsg(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GamingLinksMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GamingLinksMsg> getParserForType() {
      return PARSER;
    }

    public grpc.client.Link.GamingLinksMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GamingLinkMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.client.GamingLinkMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .grpc.client.SessionId id = 1;</code>
     *
     * <pre>
     *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional .grpc.client.SessionId id = 1;</code>
     *
     * <pre>
     *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
     * </pre>
     */
    grpc.client.Id.SessionId getId();
    /**
     * <code>optional .grpc.client.SessionId id = 1;</code>
     *
     * <pre>
     *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
     * </pre>
     */
    grpc.client.Id.SessionIdOrBuilder getIdOrBuilder();

    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     *目标游戏服务器的IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     *目标游戏服务器的IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>optional uint32 port = 3;</code>
     *
     * <pre>
     *目标游戏服务器的端口
     * </pre>
     */
    int getPort();

    /**
     * <code>optional .grpc.client.Protocal protocal = 4;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    int getProtocalValue();
    /**
     * <code>optional .grpc.client.Protocal protocal = 4;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    grpc.client.Link.Protocal getProtocal();

    /**
     * <code>optional .grpc.client.Network network = 5;</code>
     *
     * <pre>
     *可选字段，当AccelStat不为9时必选
     * </pre>
     */
    boolean hasNetwork();
    /**
     * <code>optional .grpc.client.Network network = 5;</code>
     *
     * <pre>
     *可选字段，当AccelStat不为9时必选
     * </pre>
     */
    grpc.client.NetworkOuterClass.Network getNetwork();
    /**
     * <code>optional .grpc.client.Network network = 5;</code>
     *
     * <pre>
     *可选字段，当AccelStat不为9时必选
     * </pre>
     */
    grpc.client.NetworkOuterClass.NetworkOrBuilder getNetworkOrBuilder();

    /**
     * <code>optional .grpc.client.AccelStat stat = 6;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    int getStatValue();
    /**
     * <code>optional .grpc.client.AccelStat stat = 6;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    grpc.client.Link.AccelStat getStat();

    /**
     * <code>optional string nodeIp = 7;</code>
     *
     * <pre>
     *代理节点的IP
     * </pre>
     */
    java.lang.String getNodeIp();
    /**
     * <code>optional string nodeIp = 7;</code>
     *
     * <pre>
     *代理节点的IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getNodeIpBytes();

    /**
     * <code>optional uint32 accessDelay = 8;</code>
     *
     * <pre>
     *接入延迟，客户端到节点的延迟
     * </pre>
     */
    int getAccessDelay();

    /**
     * <code>optional uint32 directDelay = 9;</code>
     *
     * <pre>
     *直连延迟，不通过加速节点，客户端直连游戏服务器的端到端延迟
     * </pre>
     */
    int getDirectDelay();

    /**
     * <code>optional uint32 proxyDelay = 10;</code>
     *
     * <pre>
     *代理延迟，通过加速节点，客户端到游戏服务器的端到端延迟
     * </pre>
     */
    int getProxyDelay();

    /**
     * <code>optional uint32 echoPort = 11;</code>
     *
     * <pre>
     *Echo端口，SDK代理时用来测试实际端到端延迟的端口
     * </pre>
     */
    int getEchoPort();

    /**
     * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
     *
     * <pre>
     *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
     * </pre>
     */
    boolean hasEffect();
    /**
     * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
     *
     * <pre>
     *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
     * </pre>
     */
    grpc.client.NetworkOuterClass.EffectStatistics getEffect();
    /**
     * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
     *
     * <pre>
     *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
     * </pre>
     */
    grpc.client.NetworkOuterClass.EffectStatisticsOrBuilder getEffectOrBuilder();

    /**
     * <code>optional .grpc.client.Network qosEffect = 13;</code>
     *
     * <pre>
     *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
     * </pre>
     */
    boolean hasQosEffect();
    /**
     * <code>optional .grpc.client.Network qosEffect = 13;</code>
     *
     * <pre>
     *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
     * </pre>
     */
    grpc.client.NetworkOuterClass.Network getQosEffect();
    /**
     * <code>optional .grpc.client.Network qosEffect = 13;</code>
     *
     * <pre>
     *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
     * </pre>
     */
    grpc.client.NetworkOuterClass.NetworkOrBuilder getQosEffectOrBuilder();
  }
  /**
   * Protobuf type {@code grpc.client.GamingLinkMsg}
   */
  public  static final class GamingLinkMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:grpc.client.GamingLinkMsg)
      GamingLinkMsgOrBuilder {
    // Use GamingLinkMsg.newBuilder() to construct.
    private GamingLinkMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GamingLinkMsg() {
      ip_ = "";
      port_ = 0;
      protocal_ = 0;
      stat_ = 0;
      nodeIp_ = "";
      accessDelay_ = 0;
      directDelay_ = 0;
      proxyDelay_ = 0;
      echoPort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GamingLinkMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              grpc.client.Id.SessionId.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(grpc.client.Id.SessionId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 24: {

              port_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              protocal_ = rawValue;
              break;
            }
            case 42: {
              grpc.client.NetworkOuterClass.Network.Builder subBuilder = null;
              if (network_ != null) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(grpc.client.NetworkOuterClass.Network.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              stat_ = rawValue;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              nodeIp_ = s;
              break;
            }
            case 64: {

              accessDelay_ = input.readUInt32();
              break;
            }
            case 72: {

              directDelay_ = input.readUInt32();
              break;
            }
            case 80: {

              proxyDelay_ = input.readUInt32();
              break;
            }
            case 88: {

              echoPort_ = input.readUInt32();
              break;
            }
            case 98: {
              grpc.client.NetworkOuterClass.EffectStatistics.Builder subBuilder = null;
              if (effect_ != null) {
                subBuilder = effect_.toBuilder();
              }
              effect_ = input.readMessage(grpc.client.NetworkOuterClass.EffectStatistics.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effect_);
                effect_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              grpc.client.NetworkOuterClass.Network.Builder subBuilder = null;
              if (qosEffect_ != null) {
                subBuilder = qosEffect_.toBuilder();
              }
              qosEffect_ = input.readMessage(grpc.client.NetworkOuterClass.Network.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(qosEffect_);
                qosEffect_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinkMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinkMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              grpc.client.Link.GamingLinkMsg.class, grpc.client.Link.GamingLinkMsg.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private grpc.client.Id.SessionId id_;
    /**
     * <code>optional .grpc.client.SessionId id = 1;</code>
     *
     * <pre>
     *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
     * </pre>
     */
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <code>optional .grpc.client.SessionId id = 1;</code>
     *
     * <pre>
     *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
     * </pre>
     */
    public grpc.client.Id.SessionId getId() {
      return id_ == null ? grpc.client.Id.SessionId.getDefaultInstance() : id_;
    }
    /**
     * <code>optional .grpc.client.SessionId id = 1;</code>
     *
     * <pre>
     *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
     * </pre>
     */
    public grpc.client.Id.SessionIdOrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int IP_FIELD_NUMBER = 2;
    private volatile java.lang.Object ip_;
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     *目标游戏服务器的IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     *目标游戏服务器的IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional uint32 port = 3;</code>
     *
     * <pre>
     *目标游戏服务器的端口
     * </pre>
     */
    public int getPort() {
      return port_;
    }

    public static final int PROTOCAL_FIELD_NUMBER = 4;
    private int protocal_;
    /**
     * <code>optional .grpc.client.Protocal protocal = 4;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    public int getProtocalValue() {
      return protocal_;
    }
    /**
     * <code>optional .grpc.client.Protocal protocal = 4;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    public grpc.client.Link.Protocal getProtocal() {
      grpc.client.Link.Protocal result = grpc.client.Link.Protocal.valueOf(protocal_);
      return result == null ? grpc.client.Link.Protocal.UNRECOGNIZED : result;
    }

    public static final int NETWORK_FIELD_NUMBER = 5;
    private grpc.client.NetworkOuterClass.Network network_;
    /**
     * <code>optional .grpc.client.Network network = 5;</code>
     *
     * <pre>
     *可选字段，当AccelStat不为9时必选
     * </pre>
     */
    public boolean hasNetwork() {
      return network_ != null;
    }
    /**
     * <code>optional .grpc.client.Network network = 5;</code>
     *
     * <pre>
     *可选字段，当AccelStat不为9时必选
     * </pre>
     */
    public grpc.client.NetworkOuterClass.Network getNetwork() {
      return network_ == null ? grpc.client.NetworkOuterClass.Network.getDefaultInstance() : network_;
    }
    /**
     * <code>optional .grpc.client.Network network = 5;</code>
     *
     * <pre>
     *可选字段，当AccelStat不为9时必选
     * </pre>
     */
    public grpc.client.NetworkOuterClass.NetworkOrBuilder getNetworkOrBuilder() {
      return getNetwork();
    }

    public static final int STAT_FIELD_NUMBER = 6;
    private int stat_;
    /**
     * <code>optional .grpc.client.AccelStat stat = 6;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    public int getStatValue() {
      return stat_;
    }
    /**
     * <code>optional .grpc.client.AccelStat stat = 6;</code>
     *
     * <pre>
     *必选字段
     * </pre>
     */
    public grpc.client.Link.AccelStat getStat() {
      grpc.client.Link.AccelStat result = grpc.client.Link.AccelStat.valueOf(stat_);
      return result == null ? grpc.client.Link.AccelStat.UNRECOGNIZED : result;
    }

    public static final int NODEIP_FIELD_NUMBER = 7;
    private volatile java.lang.Object nodeIp_;
    /**
     * <code>optional string nodeIp = 7;</code>
     *
     * <pre>
     *代理节点的IP
     * </pre>
     */
    public java.lang.String getNodeIp() {
      java.lang.Object ref = nodeIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIp_ = s;
        return s;
      }
    }
    /**
     * <code>optional string nodeIp = 7;</code>
     *
     * <pre>
     *代理节点的IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNodeIpBytes() {
      java.lang.Object ref = nodeIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCESSDELAY_FIELD_NUMBER = 8;
    private int accessDelay_;
    /**
     * <code>optional uint32 accessDelay = 8;</code>
     *
     * <pre>
     *接入延迟，客户端到节点的延迟
     * </pre>
     */
    public int getAccessDelay() {
      return accessDelay_;
    }

    public static final int DIRECTDELAY_FIELD_NUMBER = 9;
    private int directDelay_;
    /**
     * <code>optional uint32 directDelay = 9;</code>
     *
     * <pre>
     *直连延迟，不通过加速节点，客户端直连游戏服务器的端到端延迟
     * </pre>
     */
    public int getDirectDelay() {
      return directDelay_;
    }

    public static final int PROXYDELAY_FIELD_NUMBER = 10;
    private int proxyDelay_;
    /**
     * <code>optional uint32 proxyDelay = 10;</code>
     *
     * <pre>
     *代理延迟，通过加速节点，客户端到游戏服务器的端到端延迟
     * </pre>
     */
    public int getProxyDelay() {
      return proxyDelay_;
    }

    public static final int ECHOPORT_FIELD_NUMBER = 11;
    private int echoPort_;
    /**
     * <code>optional uint32 echoPort = 11;</code>
     *
     * <pre>
     *Echo端口，SDK代理时用来测试实际端到端延迟的端口
     * </pre>
     */
    public int getEchoPort() {
      return echoPort_;
    }

    public static final int EFFECT_FIELD_NUMBER = 12;
    private grpc.client.NetworkOuterClass.EffectStatistics effect_;
    /**
     * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
     *
     * <pre>
     *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
     * </pre>
     */
    public boolean hasEffect() {
      return effect_ != null;
    }
    /**
     * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
     *
     * <pre>
     *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
     * </pre>
     */
    public grpc.client.NetworkOuterClass.EffectStatistics getEffect() {
      return effect_ == null ? grpc.client.NetworkOuterClass.EffectStatistics.getDefaultInstance() : effect_;
    }
    /**
     * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
     *
     * <pre>
     *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
     * </pre>
     */
    public grpc.client.NetworkOuterClass.EffectStatisticsOrBuilder getEffectOrBuilder() {
      return getEffect();
    }

    public static final int QOSEFFECT_FIELD_NUMBER = 13;
    private grpc.client.NetworkOuterClass.Network qosEffect_;
    /**
     * <code>optional .grpc.client.Network qosEffect = 13;</code>
     *
     * <pre>
     *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
     * </pre>
     */
    public boolean hasQosEffect() {
      return qosEffect_ != null;
    }
    /**
     * <code>optional .grpc.client.Network qosEffect = 13;</code>
     *
     * <pre>
     *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
     * </pre>
     */
    public grpc.client.NetworkOuterClass.Network getQosEffect() {
      return qosEffect_ == null ? grpc.client.NetworkOuterClass.Network.getDefaultInstance() : qosEffect_;
    }
    /**
     * <code>optional .grpc.client.Network qosEffect = 13;</code>
     *
     * <pre>
     *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
     * </pre>
     */
    public grpc.client.NetworkOuterClass.NetworkOrBuilder getQosEffectOrBuilder() {
      return getQosEffect();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != null) {
        output.writeMessage(1, getId());
      }
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, ip_);
      }
      if (port_ != 0) {
        output.writeUInt32(3, port_);
      }
      if (protocal_ != grpc.client.Link.Protocal.UNKNOWN_PROTOCAL.getNumber()) {
        output.writeEnum(4, protocal_);
      }
      if (network_ != null) {
        output.writeMessage(5, getNetwork());
      }
      if (stat_ != grpc.client.Link.AccelStat.UNKNOWN_ACCEL_STATE.getNumber()) {
        output.writeEnum(6, stat_);
      }
      if (!getNodeIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, nodeIp_);
      }
      if (accessDelay_ != 0) {
        output.writeUInt32(8, accessDelay_);
      }
      if (directDelay_ != 0) {
        output.writeUInt32(9, directDelay_);
      }
      if (proxyDelay_ != 0) {
        output.writeUInt32(10, proxyDelay_);
      }
      if (echoPort_ != 0) {
        output.writeUInt32(11, echoPort_);
      }
      if (effect_ != null) {
        output.writeMessage(12, getEffect());
      }
      if (qosEffect_ != null) {
        output.writeMessage(13, getQosEffect());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, ip_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, port_);
      }
      if (protocal_ != grpc.client.Link.Protocal.UNKNOWN_PROTOCAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, protocal_);
      }
      if (network_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getNetwork());
      }
      if (stat_ != grpc.client.Link.AccelStat.UNKNOWN_ACCEL_STATE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, stat_);
      }
      if (!getNodeIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, nodeIp_);
      }
      if (accessDelay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, accessDelay_);
      }
      if (directDelay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, directDelay_);
      }
      if (proxyDelay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, proxyDelay_);
      }
      if (echoPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, echoPort_);
      }
      if (effect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getEffect());
      }
      if (qosEffect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getQosEffect());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static grpc.client.Link.GamingLinkMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static grpc.client.Link.GamingLinkMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinkMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(grpc.client.Link.GamingLinkMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code grpc.client.GamingLinkMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.client.GamingLinkMsg)
        grpc.client.Link.GamingLinkMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinkMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinkMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                grpc.client.Link.GamingLinkMsg.class, grpc.client.Link.GamingLinkMsg.Builder.class);
      }

      // Construct using grpc.client.Link.GamingLinkMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        ip_ = "";

        port_ = 0;

        protocal_ = 0;

        if (networkBuilder_ == null) {
          network_ = null;
        } else {
          network_ = null;
          networkBuilder_ = null;
        }
        stat_ = 0;

        nodeIp_ = "";

        accessDelay_ = 0;

        directDelay_ = 0;

        proxyDelay_ = 0;

        echoPort_ = 0;

        if (effectBuilder_ == null) {
          effect_ = null;
        } else {
          effect_ = null;
          effectBuilder_ = null;
        }
        if (qosEffectBuilder_ == null) {
          qosEffect_ = null;
        } else {
          qosEffect_ = null;
          qosEffectBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinkMsg_descriptor;
      }

      public grpc.client.Link.GamingLinkMsg getDefaultInstanceForType() {
        return grpc.client.Link.GamingLinkMsg.getDefaultInstance();
      }

      public grpc.client.Link.GamingLinkMsg build() {
        grpc.client.Link.GamingLinkMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public grpc.client.Link.GamingLinkMsg buildPartial() {
        grpc.client.Link.GamingLinkMsg result = new grpc.client.Link.GamingLinkMsg(this);
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        result.ip_ = ip_;
        result.port_ = port_;
        result.protocal_ = protocal_;
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        result.stat_ = stat_;
        result.nodeIp_ = nodeIp_;
        result.accessDelay_ = accessDelay_;
        result.directDelay_ = directDelay_;
        result.proxyDelay_ = proxyDelay_;
        result.echoPort_ = echoPort_;
        if (effectBuilder_ == null) {
          result.effect_ = effect_;
        } else {
          result.effect_ = effectBuilder_.build();
        }
        if (qosEffectBuilder_ == null) {
          result.qosEffect_ = qosEffect_;
        } else {
          result.qosEffect_ = qosEffectBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof grpc.client.Link.GamingLinkMsg) {
          return mergeFrom((grpc.client.Link.GamingLinkMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(grpc.client.Link.GamingLinkMsg other) {
        if (other == grpc.client.Link.GamingLinkMsg.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.protocal_ != 0) {
          setProtocalValue(other.getProtocalValue());
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        if (other.stat_ != 0) {
          setStatValue(other.getStatValue());
        }
        if (!other.getNodeIp().isEmpty()) {
          nodeIp_ = other.nodeIp_;
          onChanged();
        }
        if (other.getAccessDelay() != 0) {
          setAccessDelay(other.getAccessDelay());
        }
        if (other.getDirectDelay() != 0) {
          setDirectDelay(other.getDirectDelay());
        }
        if (other.getProxyDelay() != 0) {
          setProxyDelay(other.getProxyDelay());
        }
        if (other.getEchoPort() != 0) {
          setEchoPort(other.getEchoPort());
        }
        if (other.hasEffect()) {
          mergeEffect(other.getEffect());
        }
        if (other.hasQosEffect()) {
          mergeQosEffect(other.getQosEffect());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        grpc.client.Link.GamingLinkMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (grpc.client.Link.GamingLinkMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private grpc.client.Id.SessionId id_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.Id.SessionId, grpc.client.Id.SessionId.Builder, grpc.client.Id.SessionIdOrBuilder> idBuilder_;
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public grpc.client.Id.SessionId getId() {
        if (idBuilder_ == null) {
          return id_ == null ? grpc.client.Id.SessionId.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public Builder setId(grpc.client.Id.SessionId value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public Builder setId(
          grpc.client.Id.SessionId.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public Builder mergeId(grpc.client.Id.SessionId value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              grpc.client.Id.SessionId.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public grpc.client.Id.SessionId.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      public grpc.client.Id.SessionIdOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              grpc.client.Id.SessionId.getDefaultInstance() : id_;
        }
      }
      /**
       * <code>optional .grpc.client.SessionId id = 1;</code>
       *
       * <pre>
       *ReportGaming接口返回的会话号，只在本次游戏过程中有效，且一次游戏过程中保持不变
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.Id.SessionId, grpc.client.Id.SessionId.Builder, grpc.client.Id.SessionIdOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              grpc.client.Id.SessionId, grpc.client.Id.SessionId.Builder, grpc.client.Id.SessionIdOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       *目标游戏服务器的IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       *目标游戏服务器的IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       *目标游戏服务器的IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       *目标游戏服务器的IP
       * </pre>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       *目标游戏服务器的IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <code>optional uint32 port = 3;</code>
       *
       * <pre>
       *目标游戏服务器的端口
       * </pre>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional uint32 port = 3;</code>
       *
       * <pre>
       *目标游戏服务器的端口
       * </pre>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 port = 3;</code>
       *
       * <pre>
       *目标游戏服务器的端口
       * </pre>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private int protocal_ = 0;
      /**
       * <code>optional .grpc.client.Protocal protocal = 4;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public int getProtocalValue() {
        return protocal_;
      }
      /**
       * <code>optional .grpc.client.Protocal protocal = 4;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public Builder setProtocalValue(int value) {
        protocal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .grpc.client.Protocal protocal = 4;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public grpc.client.Link.Protocal getProtocal() {
        grpc.client.Link.Protocal result = grpc.client.Link.Protocal.valueOf(protocal_);
        return result == null ? grpc.client.Link.Protocal.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .grpc.client.Protocal protocal = 4;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public Builder setProtocal(grpc.client.Link.Protocal value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        protocal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .grpc.client.Protocal protocal = 4;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public Builder clearProtocal() {
        
        protocal_ = 0;
        onChanged();
        return this;
      }

      private grpc.client.NetworkOuterClass.Network network_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.NetworkOuterClass.Network, grpc.client.NetworkOuterClass.Network.Builder, grpc.client.NetworkOuterClass.NetworkOrBuilder> networkBuilder_;
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public boolean hasNetwork() {
        return networkBuilder_ != null || network_ != null;
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public grpc.client.NetworkOuterClass.Network getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? grpc.client.NetworkOuterClass.Network.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public Builder setNetwork(grpc.client.NetworkOuterClass.Network value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public Builder setNetwork(
          grpc.client.NetworkOuterClass.Network.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public Builder mergeNetwork(grpc.client.NetworkOuterClass.Network value) {
        if (networkBuilder_ == null) {
          if (network_ != null) {
            network_ =
              grpc.client.NetworkOuterClass.Network.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = null;
          onChanged();
        } else {
          network_ = null;
          networkBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public grpc.client.NetworkOuterClass.Network.Builder getNetworkBuilder() {
        
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      public grpc.client.NetworkOuterClass.NetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              grpc.client.NetworkOuterClass.Network.getDefaultInstance() : network_;
        }
      }
      /**
       * <code>optional .grpc.client.Network network = 5;</code>
       *
       * <pre>
       *可选字段，当AccelStat不为9时必选
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.NetworkOuterClass.Network, grpc.client.NetworkOuterClass.Network.Builder, grpc.client.NetworkOuterClass.NetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              grpc.client.NetworkOuterClass.Network, grpc.client.NetworkOuterClass.Network.Builder, grpc.client.NetworkOuterClass.NetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }

      private int stat_ = 0;
      /**
       * <code>optional .grpc.client.AccelStat stat = 6;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public int getStatValue() {
        return stat_;
      }
      /**
       * <code>optional .grpc.client.AccelStat stat = 6;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public Builder setStatValue(int value) {
        stat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .grpc.client.AccelStat stat = 6;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public grpc.client.Link.AccelStat getStat() {
        grpc.client.Link.AccelStat result = grpc.client.Link.AccelStat.valueOf(stat_);
        return result == null ? grpc.client.Link.AccelStat.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .grpc.client.AccelStat stat = 6;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public Builder setStat(grpc.client.Link.AccelStat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        stat_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .grpc.client.AccelStat stat = 6;</code>
       *
       * <pre>
       *必选字段
       * </pre>
       */
      public Builder clearStat() {
        
        stat_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object nodeIp_ = "";
      /**
       * <code>optional string nodeIp = 7;</code>
       *
       * <pre>
       *代理节点的IP
       * </pre>
       */
      public java.lang.String getNodeIp() {
        java.lang.Object ref = nodeIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nodeIp = 7;</code>
       *
       * <pre>
       *代理节点的IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNodeIpBytes() {
        java.lang.Object ref = nodeIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nodeIp = 7;</code>
       *
       * <pre>
       *代理节点的IP
       * </pre>
       */
      public Builder setNodeIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nodeIp = 7;</code>
       *
       * <pre>
       *代理节点的IP
       * </pre>
       */
      public Builder clearNodeIp() {
        
        nodeIp_ = getDefaultInstance().getNodeIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nodeIp = 7;</code>
       *
       * <pre>
       *代理节点的IP
       * </pre>
       */
      public Builder setNodeIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeIp_ = value;
        onChanged();
        return this;
      }

      private int accessDelay_ ;
      /**
       * <code>optional uint32 accessDelay = 8;</code>
       *
       * <pre>
       *接入延迟，客户端到节点的延迟
       * </pre>
       */
      public int getAccessDelay() {
        return accessDelay_;
      }
      /**
       * <code>optional uint32 accessDelay = 8;</code>
       *
       * <pre>
       *接入延迟，客户端到节点的延迟
       * </pre>
       */
      public Builder setAccessDelay(int value) {
        
        accessDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accessDelay = 8;</code>
       *
       * <pre>
       *接入延迟，客户端到节点的延迟
       * </pre>
       */
      public Builder clearAccessDelay() {
        
        accessDelay_ = 0;
        onChanged();
        return this;
      }

      private int directDelay_ ;
      /**
       * <code>optional uint32 directDelay = 9;</code>
       *
       * <pre>
       *直连延迟，不通过加速节点，客户端直连游戏服务器的端到端延迟
       * </pre>
       */
      public int getDirectDelay() {
        return directDelay_;
      }
      /**
       * <code>optional uint32 directDelay = 9;</code>
       *
       * <pre>
       *直连延迟，不通过加速节点，客户端直连游戏服务器的端到端延迟
       * </pre>
       */
      public Builder setDirectDelay(int value) {
        
        directDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 directDelay = 9;</code>
       *
       * <pre>
       *直连延迟，不通过加速节点，客户端直连游戏服务器的端到端延迟
       * </pre>
       */
      public Builder clearDirectDelay() {
        
        directDelay_ = 0;
        onChanged();
        return this;
      }

      private int proxyDelay_ ;
      /**
       * <code>optional uint32 proxyDelay = 10;</code>
       *
       * <pre>
       *代理延迟，通过加速节点，客户端到游戏服务器的端到端延迟
       * </pre>
       */
      public int getProxyDelay() {
        return proxyDelay_;
      }
      /**
       * <code>optional uint32 proxyDelay = 10;</code>
       *
       * <pre>
       *代理延迟，通过加速节点，客户端到游戏服务器的端到端延迟
       * </pre>
       */
      public Builder setProxyDelay(int value) {
        
        proxyDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 proxyDelay = 10;</code>
       *
       * <pre>
       *代理延迟，通过加速节点，客户端到游戏服务器的端到端延迟
       * </pre>
       */
      public Builder clearProxyDelay() {
        
        proxyDelay_ = 0;
        onChanged();
        return this;
      }

      private int echoPort_ ;
      /**
       * <code>optional uint32 echoPort = 11;</code>
       *
       * <pre>
       *Echo端口，SDK代理时用来测试实际端到端延迟的端口
       * </pre>
       */
      public int getEchoPort() {
        return echoPort_;
      }
      /**
       * <code>optional uint32 echoPort = 11;</code>
       *
       * <pre>
       *Echo端口，SDK代理时用来测试实际端到端延迟的端口
       * </pre>
       */
      public Builder setEchoPort(int value) {
        
        echoPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 echoPort = 11;</code>
       *
       * <pre>
       *Echo端口，SDK代理时用来测试实际端到端延迟的端口
       * </pre>
       */
      public Builder clearEchoPort() {
        
        echoPort_ = 0;
        onChanged();
        return this;
      }

      private grpc.client.NetworkOuterClass.EffectStatistics effect_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.NetworkOuterClass.EffectStatistics, grpc.client.NetworkOuterClass.EffectStatistics.Builder, grpc.client.NetworkOuterClass.EffectStatisticsOrBuilder> effectBuilder_;
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public boolean hasEffect() {
        return effectBuilder_ != null || effect_ != null;
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public grpc.client.NetworkOuterClass.EffectStatistics getEffect() {
        if (effectBuilder_ == null) {
          return effect_ == null ? grpc.client.NetworkOuterClass.EffectStatistics.getDefaultInstance() : effect_;
        } else {
          return effectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public Builder setEffect(grpc.client.NetworkOuterClass.EffectStatistics value) {
        if (effectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effect_ = value;
          onChanged();
        } else {
          effectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public Builder setEffect(
          grpc.client.NetworkOuterClass.EffectStatistics.Builder builderForValue) {
        if (effectBuilder_ == null) {
          effect_ = builderForValue.build();
          onChanged();
        } else {
          effectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public Builder mergeEffect(grpc.client.NetworkOuterClass.EffectStatistics value) {
        if (effectBuilder_ == null) {
          if (effect_ != null) {
            effect_ =
              grpc.client.NetworkOuterClass.EffectStatistics.newBuilder(effect_).mergeFrom(value).buildPartial();
          } else {
            effect_ = value;
          }
          onChanged();
        } else {
          effectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public Builder clearEffect() {
        if (effectBuilder_ == null) {
          effect_ = null;
          onChanged();
        } else {
          effect_ = null;
          effectBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public grpc.client.NetworkOuterClass.EffectStatistics.Builder getEffectBuilder() {
        
        onChanged();
        return getEffectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      public grpc.client.NetworkOuterClass.EffectStatisticsOrBuilder getEffectOrBuilder() {
        if (effectBuilder_ != null) {
          return effectBuilder_.getMessageOrBuilder();
        } else {
          return effect_ == null ?
              grpc.client.NetworkOuterClass.EffectStatistics.getDefaultInstance() : effect_;
        }
      }
      /**
       * <code>optional .grpc.client.EffectStatistics effect = 12;</code>
       *
       * <pre>
       *加速效果统计，取一段时间的抽样，分别统计透传和代理的延迟数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.NetworkOuterClass.EffectStatistics, grpc.client.NetworkOuterClass.EffectStatistics.Builder, grpc.client.NetworkOuterClass.EffectStatisticsOrBuilder> 
          getEffectFieldBuilder() {
        if (effectBuilder_ == null) {
          effectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              grpc.client.NetworkOuterClass.EffectStatistics, grpc.client.NetworkOuterClass.EffectStatistics.Builder, grpc.client.NetworkOuterClass.EffectStatisticsOrBuilder>(
                  getEffect(),
                  getParentForChildren(),
                  isClean());
          effect_ = null;
        }
        return effectBuilder_;
      }

      private grpc.client.NetworkOuterClass.Network qosEffect_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.NetworkOuterClass.Network, grpc.client.NetworkOuterClass.Network.Builder, grpc.client.NetworkOuterClass.NetworkOrBuilder> qosEffectBuilder_;
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public boolean hasQosEffect() {
        return qosEffectBuilder_ != null || qosEffect_ != null;
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public grpc.client.NetworkOuterClass.Network getQosEffect() {
        if (qosEffectBuilder_ == null) {
          return qosEffect_ == null ? grpc.client.NetworkOuterClass.Network.getDefaultInstance() : qosEffect_;
        } else {
          return qosEffectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public Builder setQosEffect(grpc.client.NetworkOuterClass.Network value) {
        if (qosEffectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          qosEffect_ = value;
          onChanged();
        } else {
          qosEffectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public Builder setQosEffect(
          grpc.client.NetworkOuterClass.Network.Builder builderForValue) {
        if (qosEffectBuilder_ == null) {
          qosEffect_ = builderForValue.build();
          onChanged();
        } else {
          qosEffectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public Builder mergeQosEffect(grpc.client.NetworkOuterClass.Network value) {
        if (qosEffectBuilder_ == null) {
          if (qosEffect_ != null) {
            qosEffect_ =
              grpc.client.NetworkOuterClass.Network.newBuilder(qosEffect_).mergeFrom(value).buildPartial();
          } else {
            qosEffect_ = value;
          }
          onChanged();
        } else {
          qosEffectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public Builder clearQosEffect() {
        if (qosEffectBuilder_ == null) {
          qosEffect_ = null;
          onChanged();
        } else {
          qosEffect_ = null;
          qosEffectBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public grpc.client.NetworkOuterClass.Network.Builder getQosEffectBuilder() {
        
        onChanged();
        return getQosEffectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      public grpc.client.NetworkOuterClass.NetworkOrBuilder getQosEffectOrBuilder() {
        if (qosEffectBuilder_ != null) {
          return qosEffectBuilder_.getMessageOrBuilder();
        } else {
          return qosEffect_ == null ?
              grpc.client.NetworkOuterClass.Network.getDefaultInstance() : qosEffect_;
        }
      }
      /**
       * <code>optional .grpc.client.Network qosEffect = 13;</code>
       *
       * <pre>
       *QoS效果统计，取一段时间的抽样，分别统计未开启QoS和开启QoS的延迟数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          grpc.client.NetworkOuterClass.Network, grpc.client.NetworkOuterClass.Network.Builder, grpc.client.NetworkOuterClass.NetworkOrBuilder> 
          getQosEffectFieldBuilder() {
        if (qosEffectBuilder_ == null) {
          qosEffectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              grpc.client.NetworkOuterClass.Network, grpc.client.NetworkOuterClass.Network.Builder, grpc.client.NetworkOuterClass.NetworkOrBuilder>(
                  getQosEffect(),
                  getParentForChildren(),
                  isClean());
          qosEffect_ = null;
        }
        return qosEffectBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:grpc.client.GamingLinkMsg)
    }

    // @@protoc_insertion_point(class_scope:grpc.client.GamingLinkMsg)
    private static final grpc.client.Link.GamingLinkMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new grpc.client.Link.GamingLinkMsg();
    }

    public static grpc.client.Link.GamingLinkMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GamingLinkMsg>
        PARSER = new com.google.protobuf.AbstractParser<GamingLinkMsg>() {
      public GamingLinkMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GamingLinkMsg(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GamingLinkMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GamingLinkMsg> getParserForType() {
      return PARSER;
    }

    public grpc.client.Link.GamingLinkMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GamingLinkDoneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.client.GamingLinkDone)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code grpc.client.GamingLinkDone}
   */
  public  static final class GamingLinkDone extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:grpc.client.GamingLinkDone)
      GamingLinkDoneOrBuilder {
    // Use GamingLinkDone.newBuilder() to construct.
    private GamingLinkDone(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GamingLinkDone() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GamingLinkDone(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinkDone_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinkDone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              grpc.client.Link.GamingLinkDone.class, grpc.client.Link.GamingLinkDone.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static grpc.client.Link.GamingLinkDone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkDone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static grpc.client.Link.GamingLinkDone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinkDone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(grpc.client.Link.GamingLinkDone prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code grpc.client.GamingLinkDone}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.client.GamingLinkDone)
        grpc.client.Link.GamingLinkDoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinkDone_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinkDone_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                grpc.client.Link.GamingLinkDone.class, grpc.client.Link.GamingLinkDone.Builder.class);
      }

      // Construct using grpc.client.Link.GamingLinkDone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinkDone_descriptor;
      }

      public grpc.client.Link.GamingLinkDone getDefaultInstanceForType() {
        return grpc.client.Link.GamingLinkDone.getDefaultInstance();
      }

      public grpc.client.Link.GamingLinkDone build() {
        grpc.client.Link.GamingLinkDone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public grpc.client.Link.GamingLinkDone buildPartial() {
        grpc.client.Link.GamingLinkDone result = new grpc.client.Link.GamingLinkDone(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof grpc.client.Link.GamingLinkDone) {
          return mergeFrom((grpc.client.Link.GamingLinkDone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(grpc.client.Link.GamingLinkDone other) {
        if (other == grpc.client.Link.GamingLinkDone.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        grpc.client.Link.GamingLinkDone parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (grpc.client.Link.GamingLinkDone) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:grpc.client.GamingLinkDone)
    }

    // @@protoc_insertion_point(class_scope:grpc.client.GamingLinkDone)
    private static final grpc.client.Link.GamingLinkDone DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new grpc.client.Link.GamingLinkDone();
    }

    public static grpc.client.Link.GamingLinkDone getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GamingLinkDone>
        PARSER = new com.google.protobuf.AbstractParser<GamingLinkDone>() {
      public GamingLinkDone parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GamingLinkDone(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GamingLinkDone> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GamingLinkDone> getParserForType() {
      return PARSER;
    }

    public grpc.client.Link.GamingLinkDone getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GamingLinksDoneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:grpc.client.GamingLinksDone)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code grpc.client.GamingLinksDone}
   */
  public  static final class GamingLinksDone extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:grpc.client.GamingLinksDone)
      GamingLinksDoneOrBuilder {
    // Use GamingLinksDone.newBuilder() to construct.
    private GamingLinksDone(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GamingLinksDone() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GamingLinksDone(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinksDone_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return grpc.client.Link.internal_static_grpc_client_GamingLinksDone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              grpc.client.Link.GamingLinksDone.class, grpc.client.Link.GamingLinksDone.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static grpc.client.Link.GamingLinksDone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksDone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static grpc.client.Link.GamingLinksDone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static grpc.client.Link.GamingLinksDone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(grpc.client.Link.GamingLinksDone prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code grpc.client.GamingLinksDone}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:grpc.client.GamingLinksDone)
        grpc.client.Link.GamingLinksDoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinksDone_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinksDone_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                grpc.client.Link.GamingLinksDone.class, grpc.client.Link.GamingLinksDone.Builder.class);
      }

      // Construct using grpc.client.Link.GamingLinksDone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return grpc.client.Link.internal_static_grpc_client_GamingLinksDone_descriptor;
      }

      public grpc.client.Link.GamingLinksDone getDefaultInstanceForType() {
        return grpc.client.Link.GamingLinksDone.getDefaultInstance();
      }

      public grpc.client.Link.GamingLinksDone build() {
        grpc.client.Link.GamingLinksDone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public grpc.client.Link.GamingLinksDone buildPartial() {
        grpc.client.Link.GamingLinksDone result = new grpc.client.Link.GamingLinksDone(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof grpc.client.Link.GamingLinksDone) {
          return mergeFrom((grpc.client.Link.GamingLinksDone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(grpc.client.Link.GamingLinksDone other) {
        if (other == grpc.client.Link.GamingLinksDone.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        grpc.client.Link.GamingLinksDone parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (grpc.client.Link.GamingLinksDone) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:grpc.client.GamingLinksDone)
    }

    // @@protoc_insertion_point(class_scope:grpc.client.GamingLinksDone)
    private static final grpc.client.Link.GamingLinksDone DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new grpc.client.Link.GamingLinksDone();
    }

    public static grpc.client.Link.GamingLinksDone getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GamingLinksDone>
        PARSER = new com.google.protobuf.AbstractParser<GamingLinksDone>() {
      public GamingLinksDone parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GamingLinksDone(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GamingLinksDone> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GamingLinksDone> getParserForType() {
      return PARSER;
    }

    public grpc.client.Link.GamingLinksDone getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_grpc_client_GamingLinksMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_grpc_client_GamingLinksMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_grpc_client_GamingLinkMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_grpc_client_GamingLinkMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_grpc_client_GamingLinkDone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_grpc_client_GamingLinkDone_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_grpc_client_GamingLinksDone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_grpc_client_GamingLinksDone_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nlink.proto\022\013grpc.client\032\010id.proto\032\rnet" +
      "work.proto\";\n\016GamingLinksMsg\022)\n\005links\030\001 " +
      "\003(\0132\032.grpc.client.GamingLinkMsg\"\373\002\n\rGami" +
      "ngLinkMsg\022\"\n\002id\030\001 \001(\0132\026.grpc.client.Sess" +
      "ionId\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022\'\n\010proto" +
      "cal\030\004 \001(\0162\025.grpc.client.Protocal\022%\n\007netw" +
      "ork\030\005 \001(\0132\024.grpc.client.Network\022$\n\004stat\030" +
      "\006 \001(\0162\026.grpc.client.AccelStat\022\016\n\006nodeIp\030" +
      "\007 \001(\t\022\023\n\013accessDelay\030\010 \001(\r\022\023\n\013directDela" +
      "y\030\t \001(\r\022\022\n\nproxyDelay\030\n \001(\r\022\020\n\010echoPort\030",
      "\013 \001(\r\022-\n\006effect\030\014 \001(\0132\035.grpc.client.Effe" +
      "ctStatistics\022\'\n\tqosEffect\030\r \001(\0132\024.grpc.c" +
      "lient.Network\"\020\n\016GamingLinkDone\"\021\n\017Gamin" +
      "gLinksDone*2\n\010Protocal\022\024\n\020UNKNOWN_PROTOC" +
      "AL\020\000\022\007\n\003TCP\020\001\022\007\n\003UDP\020\002*\257\002\n\tAccelStat\022\027\n\023" +
      "UNKNOWN_ACCEL_STATE\020\000\022\n\n\006NORMAL\020\001\022\r\n\tNOT" +
      "_PROXY\020\002\022\017\n\013DIRECT_FAIL\020\003\022\022\n\016DIRECT_TIME" +
      "OUT\020\004\022\020\n\014TCP_SYN_FAIL\020\005\022\016\n\nPROXY_FAIL\020\006\022" +
      "\021\n\rPROXY_TIMEOUT\020\007\022\r\n\tBOTH_FAIL\020\010\022\021\n\rNET" +
      "WORK_ERROR\020\t\022\021\n\rUDP_ECHO_FAIL\020\n\022\026\n\022SPEED",
      "_MEASURE_FAIL\020\013\022\024\n\020SPEED_MEASUREING\020\014\022\013\n" +
      "\007MISS_IP\020\r\022\021\n\rINVALID_DELAY\020\016\022\021\n\014STAT_IN" +
      "VALID\020\200\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          grpc.client.Id.getDescriptor(),
          grpc.client.NetworkOuterClass.getDescriptor(),
        }, assigner);
    internal_static_grpc_client_GamingLinksMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_grpc_client_GamingLinksMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_grpc_client_GamingLinksMsg_descriptor,
        new java.lang.String[] { "Links", });
    internal_static_grpc_client_GamingLinkMsg_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_grpc_client_GamingLinkMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_grpc_client_GamingLinkMsg_descriptor,
        new java.lang.String[] { "Id", "Ip", "Port", "Protocal", "Network", "Stat", "NodeIp", "AccessDelay", "DirectDelay", "ProxyDelay", "EchoPort", "Effect", "QosEffect", });
    internal_static_grpc_client_GamingLinkDone_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_grpc_client_GamingLinkDone_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_grpc_client_GamingLinkDone_descriptor,
        new java.lang.String[] { });
    internal_static_grpc_client_GamingLinksDone_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_grpc_client_GamingLinksDone_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_grpc_client_GamingLinksDone_descriptor,
        new java.lang.String[] { });
    grpc.client.Id.getDescriptor();
    grpc.client.NetworkOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
